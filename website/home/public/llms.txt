# GenSX

GenSX is a simple typescript framework for building complex LLM applications. It's built around functional, reusable components that are composed using JSX to create and orchestrate workflows.

## Docs

- [Why JSX?](https://gensx.com/docs/why-jsx)
- [TypeScript/ESM Compatibility](https://gensx.com/docs/typescript-compatibility)
- [Quickstart](https://gensx.com/docs/quickstart)
- [GenSX Overview](https://gensx.com/docs/index)
- [Basic concepts](https://gensx.com/docs/basic-concepts)
- [Tools](https://gensx.com/docs/patterns/tools)
- [Structured outputs](https://gensx.com/docs/patterns/structured-outputs)
- [Self-reflection](https://gensx.com/docs/patterns/reflection)
- [OpenAI Computer Use](https://gensx.com/docs/examples/openai-computer-use)
- [Model Context Protocol](https://gensx.com/docs/examples/mcp)
- [Hacker News analyzer](https://gensx.com/docs/examples/hn)
- [Blog writer](https://gensx.com/docs/examples/blog-writing)
- [Building reusable components](https://gensx.com/docs/concepts/reusable-components)
- [How GenSX works](https://gensx.com/docs/concepts/how-gensx-works)
- [Working with context and providers](https://gensx.com/docs/concepts/context)
- [Using array operations](https://gensx.com/docs/concepts/arrays)
- [Vercel AI SDK](https://gensx.com/docs/component-reference/vercel-ai)
- [OpenRouter](https://gensx.com/docs/component-reference/openrouter)
- [OpenAI](https://gensx.com/docs/component-reference/openai)
- [MCP](https://gensx.com/docs/component-reference/mcp)
- [Anthropic](https://gensx.com/docs/component-reference/anthropic)
- [Serverless deployments](https://gensx.com/docs/cloud/serverless-deployments)
- [Projects and environments](https://gensx.com/docs/cloud/projects-environments)
- [Pricing & limits](https://gensx.com/docs/cloud/pricing)
- [Observability & tracing](https://gensx.com/docs/cloud/observability)
- [Local development](https://gensx.com/docs/cloud/local-development)
- [GenSX Cloud](https://gensx.com/docs/cloud/index)
- [gensx start](https://gensx.com/docs/cli-reference/start)
- [gensx run](https://gensx.com/docs/cli-reference/run)
- [gensx new](https://gensx.com/docs/cli-reference/new)
- [gensx login](https://gensx.com/docs/cli-reference/login)
- [CLI overview](https://gensx.com/docs/cli-reference/index)
- [gensx deploy](https://gensx.com/docs/cli-reference/deploy)
- [gensx build](https://gensx.com/docs/cli-reference/build)
- [Search reference](https://gensx.com/docs/component-reference/storage-components/search-reference)
- [SQL database reference](https://gensx.com/docs/component-reference/storage-components/database-reference)
- [Blob storage reference](https://gensx.com/docs/component-reference/storage-components/blob-reference)
- [SQL database](https://gensx.com/docs/cloud/storage/sql-database)
- [Search](https://gensx.com/docs/cloud/storage/search)
- [Blob storage](https://gensx.com/docs/cloud/storage/blob-storage)

## Blog

- [Why React is surprisingly the best model for LLM workflows](https://gensx.com/blogs/why-react-is-the-best-backend-workflow-engine)
- ["But where's the graph?" â€” Why trees beat graphs for LLM workflows](https://gensx.com/blogs/wheres_the_graph)
- [Self-modifying code agent](https://gensx.com/blogs/self-modifying-code)
- [LLMs are really bad at Tic-Tac-Toe](https://gensx.com/blogs/llm-tic-tac-toe)