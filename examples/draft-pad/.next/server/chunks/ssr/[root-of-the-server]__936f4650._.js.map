{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///Users/dereklegenzoff/Source/gensx-mono/gensx/packages/gensx-react/src/hooks/use-gensx.ts"],"sourcesContent":["import {\n  GenSXComponentEndEvent,\n  GenSXComponentStartEvent,\n  GenSXEndEvent,\n  GenSXErrorEvent,\n  GenSXEvent,\n  GenSXOutputEvent,\n  GenSXProgressEvent,\n  GenSXStartEvent,\n} from \"@gensx/client\";\nimport { useCallback, useMemo, useRef, useState } from \"react\";\n\n// Match the Client's RunOptions interface\nexport interface GenSXRunOptions {\n  org: string;\n  project: string;\n  environment?: string;\n  inputs?: Record<string, unknown>;\n  format?: \"sse\" | \"ndjson\" | \"json\";\n}\n\nexport interface UseGenSXOptions<\n  TInputs = unknown,\n  TOutput = unknown,\n  TEvent extends GenSXProgressEvent = GenSXProgressEvent,\n> {\n  /**\n   * API endpoint URL (your server endpoint that proxies to GenSX)\n   */\n  endpoint: string;\n\n  /**\n   * Workflow name to execute (required now)\n   */\n  workflowName: string;\n\n  /**\n   * Default configuration applied to every run/stream (org, project, env, etc.)\n   * Does NOT include inputs â€“ those are passed per invocation.\n   */\n  defaultConfig?: Omit<Partial<GenSXRunOptions>, \"inputs\">;\n\n  /**\n   * Optional headers to include in the request\n   */\n  headers?: Record<string, string>;\n\n  /**\n   * Callback fired when workflow starts\n   */\n  onStart?: (message: string) => void;\n\n  /**\n   * Callback fired for progress updates\n   * Can receive either a string message or a parsed JSON object for structured progress events\n   */\n  onProgress?: (message: string | any) => void;\n\n  /**\n   * Callback fired for each output chunk (streaming mode only)\n   */\n  onOutput?: (chunk: string) => void;\n\n  /**\n   * Callback fired when workflow completes\n   */\n  onComplete?: (output: TOutput) => void;\n\n  /**\n   * Callback fired on error\n   */\n  onError?: (error: string) => void;\n\n  /**\n   * Callback fired for any event\n   */\n  onEvent?: (event: TEvent) => void;\n}\n\n// Union type for workflow control events (excludes progress and output)\nexport type GenSXWorkflowEvent =\n  | GenSXStartEvent\n  | GenSXComponentStartEvent\n  | GenSXComponentEndEvent\n  | GenSXEndEvent\n  | GenSXErrorEvent;\n\nexport interface UseGenSXResult<\n  TInputs = any,\n  TOutput = any,\n  TEvent extends GenSXProgressEvent = GenSXProgressEvent,\n> {\n  /** Whether the workflow is currently running */\n  isLoading: boolean;\n\n  /** Whether the workflow is streaming */\n  isStreaming: boolean;\n\n  /** Any error that occurred */\n  error: string | null;\n\n  /** The final output (collection mode) */\n  output: TOutput | null;\n\n  /** All events received */\n  events: GenSXEvent[];\n\n  /** All events received */\n  workflowEvents: GenSXEvent[];\n\n  /** Progress events */\n  progressEvents: TEvent[];\n\n  /** Output events */\n  outputEvents: GenSXOutputEvent[];\n\n  /** Run workflow in collection mode (returns final output) */\n  run: (inputs: TInputs) => Promise<TOutput | null>;\n\n  /** Run workflow in streaming mode */\n  stream: (inputs: TInputs) => Promise<void>;\n\n  /** Stop the current workflow */\n  stop: () => void;\n\n  /** Clear all state */\n  clear: () => void;\n\n  /**\n   * Hook to retrieve (and optionally transform) structured progress events.\n   * Always returns both events array and reduced value.\n   *\n   * Basic usage:\n   *   const { events, value } = useProgressEvents(\"myType\");\n   *\n   * With reducer:\n   *   const { events, value } = useProgressEvents(\"myType\", {\n   *     reducer: {\n   *       reduce: (acc, e) => acc + 1,\n   *       initial: 0\n   *     }\n   *   });\n   */\n  useProgressEvents: <T extends { type: string }, R = T[]>(\n    filter: T[\"type\"] | T[\"type\"][] | ((e: any) => e is T),\n    options?: {\n      reducer?: {\n        reduce: (acc: R, item: T) => R;\n        initial: R;\n      };\n    },\n  ) => { events: T[]; value: R };\n\n  /**\n   * Hook to retrieve workflow control events.\n   * Returns events for 'start', 'end', 'component-start', 'component-end', 'error'.\n   * Excludes 'progress' and 'output' events.\n   * Always returns both events array and reduced value.\n   *\n   * Basic usage:\n   *   const { events, value } = useWorkflowEvents();\n   *\n   * With reducer:\n   *   const { events, value } = useWorkflowEvents({\n   *     reducer: {\n   *       reduce: (acc, e) => acc + 1,\n   *       initial: 0\n   *     }\n   *   });\n   */\n  useWorkflowEvents: <T = GenSXWorkflowEvent, R = T[]>(options?: {\n    reducer?: {\n      reduce: (acc: R, item: T) => R;\n      initial: R;\n    };\n  }) => { events: T[]; value: R };\n\n  /**\n   * Hook to retrieve output events.\n   * Returns GenSXOutputEvent objects for 'output' events only.\n   * Always returns both events array and reduced value.\n   *\n   * Basic usage:\n   *   const { events, value } = useOutputEvents();\n   *\n   * With reducer:\n   *   const { events, value } = useOutputEvents({\n   *     reducer: {\n   *       reduce: (acc, e) => acc + e.content,\n   *       initial: ''\n   *     }\n   *   });\n   */\n  useOutputEvents: <T = GenSXOutputEvent, R = T[]>(options?: {\n    reducer?: {\n      reduce: (acc: R, item: T) => R;\n      initial: R;\n    };\n  }) => { events: T[]; value: R };\n}\n\n/**\n * Hook for interacting with GenSX workflows via your API endpoint\n *\n * Matches the GenSX Client interface for easy passthrough implementations\n *\n * @example\n * ```tsx\n * // Configure defaults\n * const gensx = useGenSX({\n *   endpoint: '/api/gensx',\n *   defaultConfig: {\n *     org: 'my-org',\n *     project: 'my-project',\n *     environment: 'production'\n *   },\n *   onOutput: (chunk) => console.log(chunk),\n *   onComplete: (output) => console.log('Done:', output)\n * });\n *\n * // Collection mode - wait for final output\n * const result = await gensx.run('ChatWorkflow', {\n *   inputs: { userMessage: 'Hello' }\n * });\n *\n * // Streaming mode - get chunks as they arrive\n * await gensx.stream('ChatWorkflow', {\n *   inputs: { userMessage: 'Tell me a story' }\n * });\n *\n * // Override defaults for specific call\n * await gensx.run('ChatWorkflow', {\n *   org: 'different-org',\n *   project: 'different-project',\n *   inputs: { userMessage: 'Hello from different org' }\n * });\n * ```\n */\nexport function useWorkflow<\n  TInputs = any,\n  TOutput = any,\n  // This should actually be BaseProgressEvent\n  TEvent extends GenSXProgressEvent = GenSXProgressEvent,\n>(\n  options: UseGenSXOptions<TInputs, TOutput, TEvent>,\n): UseGenSXResult<TInputs, TOutput, TEvent> {\n  const {\n    endpoint,\n    workflowName,\n    defaultConfig = {},\n    headers = {},\n    onStart,\n    onProgress,\n    onOutput,\n    onComplete,\n    onError,\n    onEvent,\n  } = options;\n\n  // State\n  const [isLoading, setIsLoading] = useState(false);\n  const [isStreaming, setIsStreaming] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [output, setOutput] = useState<TOutput | null>(null);\n  const [events, setEvents] = useState<GenSXEvent[]>([]);\n  const [workflowEvents, setWorkflowEvents] = useState<GenSXEvent[]>([]);\n  const [progressEvents, setProgressEvents] = useState<TEvent[]>([]);\n  const [outputEvents, setOutputEvents] = useState<GenSXOutputEvent[]>([]);\n\n  // Refs\n  const abortControllerRef = useRef<AbortController | null>(null);\n  const outputRef = useRef<TOutput | null>(null);\n\n  // Process a single event\n  const processEvent = useCallback(\n    (event: GenSXEvent) => {\n      // Add to events list\n      setEvents((prev) => [...prev, event]);\n\n      // Add to workflowEvents if it's a workflow control event (not progress or output)\n      if (event.type !== \"progress\" && event.type !== \"output\") {\n        setWorkflowEvents((prev) => [...prev, event]);\n      }\n\n      // Fire generic callback\n      if (event.type === \"progress\") {\n        onEvent?.(event as unknown as TEvent);\n      }\n\n      // Handle specific event types\n      switch (event.type) {\n        case \"start\":\n          onStart?.(event.workflowName);\n          break;\n\n        case \"progress\":\n          if (\"data\" in event && typeof (event as any).data === \"string\") {\n            const dataStr = (event as any).data;\n            setProgressEvents((prev) => [...prev, event as TEvent]);\n\n            // Try to parse progress message as JSON for structured progress events\n            try {\n              const parsedProgress = JSON.parse(dataStr);\n              onProgress?.(parsedProgress);\n            } catch {\n              // If not JSON, pass as-is\n              onProgress?.(dataStr);\n            }\n          }\n          break;\n\n        case \"output\":\n          setOutputEvents((prev) => [...prev, event]);\n          setOutput((prev) => {\n            if (typeof prev === \"string\" || prev === null) {\n              const newOutput = ((prev || \"\") + event.content) as TOutput;\n              outputRef.current = newOutput; // Keep ref in sync\n              return newOutput;\n            }\n            // For non-string outputs, just return the previous value\n            return prev;\n          });\n          onOutput?.(event.content);\n          break;\n\n        case \"end\":\n          // Don't set output here - it's already accumulated in real-time\n          setIsLoading(false);\n          setIsStreaming(false);\n          // Call onComplete with the accumulated output\n          onComplete?.(outputRef.current || (null as any));\n          break;\n\n        case \"error\":\n          const errorMessage = event.error || event.message || \"Unknown error\";\n          setError(errorMessage);\n          setIsLoading(false);\n          setIsStreaming(false);\n          onError?.(errorMessage);\n          break;\n      }\n    },\n    [onEvent, onStart, onProgress, onOutput, onComplete, onError],\n  );\n\n  // Parse streaming response\n  const parseStream = useCallback(\n    async (response: Response): Promise<void> => {\n      const reader = response.body?.getReader();\n      if (!reader) {\n        throw new Error(\"No response body\");\n      }\n\n      const decoder = new TextDecoder();\n      let buffer = \"\";\n\n      try {\n        // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n        while (true) {\n          const { done, value } = await reader.read();\n          if (done) break;\n\n          buffer += decoder.decode(value, { stream: true });\n          const lines = buffer.split(\"\\n\");\n          buffer = lines.pop() || \"\"; // Keep incomplete line in buffer\n\n          for (const line of lines) {\n            if (!line.trim()) continue;\n\n            try {\n              const event = JSON.parse(line) as GenSXEvent;\n              processEvent(event);\n            } catch (e) {\n              console.warn(\"Failed to parse event:\", line);\n            }\n          }\n        }\n\n        // Process any remaining buffer\n        if (buffer.trim()) {\n          try {\n            const event = JSON.parse(buffer) as GenSXEvent;\n            processEvent(event);\n          } catch (e) {\n            console.warn(\"Failed to parse final event:\", buffer);\n          }\n        }\n      } finally {\n        reader.releaseLock();\n      }\n    },\n    [processEvent],\n  );\n\n  // Clear state\n  const clear = useCallback(() => {\n    setIsLoading(false);\n    setIsStreaming(false);\n    setError(null);\n    setOutput(null);\n    setEvents([]);\n    setWorkflowEvents([]);\n    setProgressEvents([]);\n    setOutputEvents([]);\n    outputRef.current = null;\n  }, []);\n\n  // Stop current workflow\n  const stop = useCallback(() => {\n    if (abortControllerRef.current) {\n      abortControllerRef.current.abort();\n      abortControllerRef.current = null;\n    }\n    setIsLoading(false);\n    setIsStreaming(false);\n  }, []);\n\n  // Build request payload matching Client format\n  const buildPayload = useCallback(\n    (inputs: TInputs) => {\n      // Merge with defaults (no inputs here)\n      const config = {\n        ...defaultConfig,\n        inputs,\n      } as GenSXRunOptions;\n\n      return {\n        workflowName,\n        org: config.org,\n        project: config.project,\n        environment: config.environment,\n        format: config.format,\n        ...config.inputs,\n      };\n    },\n    [defaultConfig, workflowName],\n  );\n\n  // Run workflow in collection mode\n  const run = useCallback(\n    async (inputs: TInputs) => {\n      // Reset state\n      clear();\n      setIsLoading(true);\n\n      // Create abort controller\n      abortControllerRef.current = new AbortController();\n\n      try {\n        const response = await fetch(endpoint, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            ...headers,\n          },\n          body: JSON.stringify(buildPayload(inputs)),\n          signal: abortControllerRef.current.signal,\n        });\n\n        if (!response.ok) {\n          throw new Error(\n            `Failed to run workflow: ${response.status} ${response.statusText}`,\n          );\n        }\n\n        // Parse the stream\n        await parseStream(response);\n\n        // Return the final output\n        return outputRef.current;\n      } catch (err) {\n        const errorMessage =\n          err instanceof Error ? err.message : \"Unknown error\";\n        setError(errorMessage);\n        throw err;\n      } finally {\n        setIsLoading(false);\n        abortControllerRef.current = null;\n      }\n    },\n    [endpoint, headers, clear, parseStream, buildPayload],\n  );\n\n  // Run workflow in streaming mode\n  const stream = useCallback(\n    async (inputs: TInputs) => {\n      // Reset state\n      clear();\n      setIsLoading(true);\n      setIsStreaming(true);\n\n      // Create abort controller\n      abortControllerRef.current = new AbortController();\n\n      try {\n        const response = await fetch(endpoint, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            ...headers,\n          },\n          body: JSON.stringify(buildPayload(inputs)),\n          signal: abortControllerRef.current.signal,\n        });\n\n        if (!response.ok) {\n          throw new Error(\n            `Failed to stream workflow: ${response.status} ${response.statusText}`,\n          );\n        }\n\n        // Parse the stream\n        await parseStream(response);\n\n        // onComplete is already called in processEvent when 'end' event is received\n      } catch (err) {\n        const errorMessage =\n          err instanceof Error ? err.message : \"Unknown error\";\n        setError(errorMessage);\n        throw err;\n      } finally {\n        setIsLoading(false);\n        setIsStreaming(false);\n        abortControllerRef.current = null;\n      }\n    },\n    [endpoint, headers, clear, parseStream, buildPayload],\n  );\n\n  // Hook to filter (and optionally map) structured progress events with strong typing\n  const useProgressEvents = useCallback(\n    <T extends { type: string }, R = T[]>(\n      filter: T[\"type\"] | T[\"type\"][] | ((e: any) => e is T),\n      options?: {\n        reducer?: {\n          reduce: (acc: R, item: T) => R;\n          initial: R;\n        };\n      },\n    ): { events: T[]; value: R } => {\n      return useMemo(() => {\n        // 1. Parse all progress events into objects (best-effort)\n        const parsed: unknown[] = progressEvents\n          .filter((e) => e.type === \"progress\")\n          .map((e) => {\n            const raw = (e as any).data as string | undefined;\n            if (!raw) return null;\n            try {\n              return JSON.parse(raw);\n            } catch {\n              return null;\n            }\n          })\n          .filter(Boolean);\n\n        // 2. Narrow to the desired subset\n        let matched: T[] = [];\n\n        if (typeof filter === \"function\") {\n          matched = (parsed as T[]).filter(filter);\n        } else {\n          const keys = Array.isArray(filter) ? filter : [filter];\n          matched = (parsed as T[]).filter((ev) =>\n            (keys as string[]).includes((ev as any).type),\n          );\n        }\n\n        // 3. Apply reducer if provided, otherwise use the events as the value\n        if (options?.reducer?.initial !== undefined) {\n          const value = matched.reduce(\n            options.reducer.reduce as any,\n            options.reducer.initial,\n          );\n          return { events: matched, value };\n        }\n\n        // Default: value is the events array itself\n        return { events: matched, value: matched as unknown as R };\n      }, [events, filter, options]);\n    },\n    [events],\n  );\n\n  // Hook to get all workflow events except progress and output events\n  const useWorkflowEvents = useCallback(\n    <T = GenSXWorkflowEvent, R = T[]>(options?: {\n      reducer?: {\n        reduce: (acc: R, item: T) => R;\n        initial: R;\n      };\n    }): { events: T[]; value: R } => {\n      return useMemo(() => {\n        // Filter out progress and output events\n        const workflowControlEvents = events.filter(\n          (e) => e.type !== \"progress\" && e.type !== \"output\",\n        ) as T[];\n\n        // Apply reducer if provided, otherwise use the events as the value\n        if (options?.reducer?.initial !== undefined) {\n          const value = workflowControlEvents.reduce(\n            options.reducer.reduce as any,\n            options.reducer.initial,\n          );\n          return { events: workflowControlEvents, value };\n        }\n\n        // Default: value is the events array itself\n        return {\n          events: workflowControlEvents,\n          value: workflowControlEvents as unknown as R,\n        };\n      }, [events, options]);\n    },\n    [events],\n  );\n\n  // Hook to get output events\n  const useOutputEvents = useCallback(\n    <T = GenSXOutputEvent, R = T[]>(options?: {\n      reducer?: {\n        reduce: (acc: R, item: T) => R;\n        initial: R;\n      };\n    }): { events: T[]; value: R } => {\n      return useMemo(() => {\n        // Filter only output events\n        const outputEvents = events.filter((e) => e.type === \"output\") as T[];\n\n        // Apply reducer if provided, otherwise use the events as the value\n        if (options?.reducer?.initial !== undefined) {\n          const value = outputEvents.reduce(\n            options.reducer.reduce as any,\n            options.reducer.initial,\n          );\n          return { events: outputEvents, value };\n        }\n\n        // Default: value is the events array itself\n        return { events: outputEvents, value: outputEvents as unknown as R };\n      }, [events, options]);\n    },\n    [events, options],\n  );\n\n  return {\n    isLoading,\n    isStreaming,\n    error,\n    output,\n    events,\n    workflowEvents,\n    progressEvents,\n    outputEvents,\n    run,\n    stream,\n    stop,\n    clear,\n    useOutputEvents,\n    useProgressEvents,\n    useWorkflowEvents,\n  };\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 394, "column": 0}, "map": {"version":3,"sources":["file:///Users/dereklegenzoff/Source/gensx-mono/gensx/packages/gensx-react/index.tsx"],"sourcesContent":["import * as React from 'react';\n\n// Export hooks\nexport * from './src/hooks/use-gensx';\n\n// Example placeholder exports\nexport const Button = ({ children, ...props }: React.ButtonHTMLAttributes<HTMLButtonElement>) => {\n  return <button {...props}>{children}</button>;\n}; "],"names":[],"mappings":";;;;AAEA,eAAe;AACf;;;AAGO,MAAM,SAAS,CAAC,EAAE,QAAQ,EAAE,GAAG,OAAsD;IAC1F,qBAAO,qZAAC;QAAQ,GAAG,KAAK;kBAAG;;;;;;AAC7B","debugId":null}},
    {"offset": {"line": 428, "column": 0}, "map": {"version":3,"sources":["file:///Users/dereklegenzoff/Source/gensx-mono/gensx/examples/draft-pad/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,yNAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,sLAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 444, "column": 0}, "map": {"version":3,"sources":["file:///Users/dereklegenzoff/Source/gensx-mono/gensx/examples/draft-pad/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\n// SVG Filter Component for Glass Distortion\nfunction GlassDistortionFilter() {\n  return (\n    <svg className=\"absolute w-0 h-0\" aria-hidden=\"true\">\n      <filter\n        id=\"glass-distortion\"\n        x=\"0%\"\n        y=\"0%\"\n        width=\"100%\"\n        height=\"100%\"\n        filterUnits=\"objectBoundingBox\"\n      >\n        <feTurbulence\n          type=\"fractalNoise\"\n          baseFrequency=\"0.01 0.01\"\n          numOctaves=\"1\"\n          seed=\"5\"\n          result=\"turbulence\"\n        />\n        <feComponentTransfer in=\"turbulence\" result=\"mapped\">\n          <feFuncR type=\"gamma\" amplitude=\"1\" exponent=\"10\" offset=\"0.5\" />\n          <feFuncG type=\"gamma\" amplitude=\"0\" exponent=\"1\" offset=\"0\" />\n          <feFuncB type=\"gamma\" amplitude=\"0\" exponent=\"1\" offset=\"0.5\" />\n        </feComponentTransfer>\n        <feGaussianBlur in=\"turbulence\" stdDeviation=\"3\" result=\"softMap\" />\n        <feSpecularLighting\n          in=\"softMap\"\n          surfaceScale=\"5\"\n          specularConstant=\"1\"\n          specularExponent=\"100\"\n          lightingColor=\"white\"\n          result=\"specLight\"\n        >\n          <fePointLight x=\"-200\" y=\"-200\" z=\"300\" />\n        </feSpecularLighting>\n        <feComposite\n          in=\"specLight\"\n          operator=\"arithmetic\"\n          k1=\"0\"\n          k2=\"1\"\n          k3=\"1\"\n          k4=\"0\"\n          result=\"litImage\"\n        />\n        <feDisplacementMap\n          in=\"SourceGraphic\"\n          in2=\"softMap\"\n          scale=\"150\"\n          xChannelSelector=\"R\"\n          yChannelSelector=\"G\"\n        />\n      </filter>\n    </svg>\n  )\n}\n\n// Global filter instance\nlet filterRendered = false;\n\nfunction Card({ className, children, liquidGlass = true, ...props }: React.ComponentProps<\"div\"> & { liquidGlass?: boolean }) {\n  const shouldRenderFilter = liquidGlass && !filterRendered;\n  if (shouldRenderFilter) {\n    filterRendered = true;\n  }\n\n  if (liquidGlass) {\n    return (\n      <>\n        {shouldRenderFilter && <GlassDistortionFilter />}\n        <div\n          data-slot=\"card\"\n          className={cn(\n            \"relative rounded-3xl overflow-hidden shadow-[0_6px_6px_rgba(0,0,0,0.2),0_0_20px_rgba(0,0,0,0.1)] transition-all duration-400 ease-out hover:shadow-[0_8px_8px_rgba(0,0,0,0.25),0_0_25px_rgba(0,0,0,0.15)]\",\n            className\n          )}\n          {...props}\n        >\n          {/* Glass Effect Layer */}\n          <div className=\"absolute inset-0 z-0 backdrop-blur-[3px] overflow-hidden rounded-3xl\" style={{ filter: 'url(#glass-distortion)' }} />\n          \n          {/* Tint Layer - reducing opacity for more transparency */}\n          <div className=\"absolute inset-0 z-[1] bg-white/10 overflow-hidden rounded-3xl\" />\n          \n          {/* Shine Layer - matching the example's box-shadow */}\n          <div className=\"absolute inset-0 z-[2] overflow-hidden rounded-3xl shadow-[inset_2px_2px_1px_0_rgba(255,255,255,0.5),inset_-1px_-1px_1px_1px_rgba(255,255,255,0.5)]\" />\n          \n          {/* Content Layer */}\n          <div className=\"relative z-[3]\">\n            {children}\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  // Fallback to original card style if liquidGlass is false\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"text-card-foreground flex flex-col rounded-xl\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </div>\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"flex flex-col space-y-1.5\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 733, "column": 0}, "map": {"version":3,"sources":["file:///Users/dereklegenzoff/Source/gensx-mono/gensx/examples/draft-pad/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Input({ className, type, ...props }: React.ComponentProps<\"input\">) {\n  return (\n    <input\n      type={type}\n      data-slot=\"input\"\n      className={cn(\n        \"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground flex h-9 w-full min-w-0 rounded-md text-sm shadow-xs transition-[color,box-shadow] outline-none focus:outline-none focus-visible:outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive border-[1.5px] border-white/10 shadow-[0_1.5px_1px_rgba(64,64,64,0.5)] bg-black/70 backdrop-blur-sm text-white px-3 py-1\",\n        className,\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAEA;;;AAEA,SAAS,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAsC;IACzE,qBACE,qZAAC;QACC,MAAM;QACN,aAAU;QACV,WAAW,CAAA,GAAA,wIAAA,CAAA,KAAE,AAAD,EACV,soBACA;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 759, "column": 0}, "map": {"version":3,"sources":["file:///Users/dereklegenzoff/Source/gensx-mono/gensx/examples/draft-pad/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none cursor-pointer border-[1px] border-[#363537] bg-gradient-to-t from-[#222224] to-[#28282A] shadow-[0_2px_3px_rgba(0,0,0,0.3)] text-white hover:from-[#28282A] hover:to-[#2A2A2C] hover:shadow-[0_4px_6px_rgba(0,0,0,0.4)] active:from-[#1E1E20] active:to-[#222224] active:shadow-[0_1px_2px_rgba(0,0,0,0.3)]\",\n  {\n    variants: {\n      variant: {\n        default: \"\",\n        destructive: \"\",\n        outline: \"\",\n        secondary: \"\",\n        ghost: \"\",\n        link: \"bg-none border-none shadow-none text-primary underline-offset-4 hover:underline hover:shadow-none\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,2OAAA,CAAA,MAAG,AAAD,EACvB,ujBACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aAAa;YACb,SAAS;YACT,WAAW;YACX,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,oSAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,qZAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,wIAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 816, "column": 0}, "map": {"version":3,"sources":["file:///Users/dereklegenzoff/Source/gensx-mono/gensx/examples/draft-pad/components/ui/draft-editor-card.tsx"],"sourcesContent":["import { Card } from \"@/components/ui/card\";\nimport { Input } from \"@/components/ui/input\";\nimport { Button } from \"@/components/ui/button\";\nimport { useState, useRef, useEffect } from \"react\";\nimport { Copy, Check, Send } from \"lucide-react\";\n\ninterface DraftEditorCardProps {\n  output: string | null;\n  isStreaming: boolean;\n  error: string | null;\n  userMessage: string;\n  onUserMessageChange: (value: string) => void;\n  onSubmit: () => void;\n  className?: string;\n}\n\nexport function DraftEditorCard({ \n  output, \n  isStreaming, \n  error,\n  userMessage,\n  onUserMessageChange,\n  onSubmit,\n  className = \"\" \n}: DraftEditorCardProps) {\n  const [copied, setCopied] = useState(false);\n  const inputRef = useRef<HTMLInputElement>(null);\n  const [wasStreaming, setWasStreaming] = useState(false);\n\n  // Track when streaming stops and focus the input\n  useEffect(() => {\n    if (wasStreaming && !isStreaming) {\n      // Streaming just finished, focus the input\n      inputRef.current?.focus();\n    }\n    setWasStreaming(isStreaming);\n  }, [isStreaming, wasStreaming]);\n\n  // Focus input on initial mount\n  useEffect(() => {\n    inputRef.current?.focus();\n  }, []);\n\n  const handleCopy = async () => {\n    if (output) {\n      await navigator.clipboard.writeText(output);\n      setCopied(true);\n      setTimeout(() => setCopied(false), 2000);\n    }\n  };\n\n  return (\n    <div className={`space-y-4 ${className}`}>\n      <Card className=\"p-4 pb-10 px-6 min-h-[400px]\">\n        {output && (\n          <div className=\"flex justify-end\">\n            <Button\n              onClick={handleCopy}\n              className=\"cursor-pointer backdrop-blur-md bg-white/20 hover:bg-white/30 text-[#333333] border border-white/30 hover:border-white/40 shadow-[inset_1px_1px_1px_0_rgba(255,255,255,0.5)] transition-all p-2 rounded-xl\"\n              size=\"icon\"\n            >\n              {copied ? (\n                <Check className=\"h-4 w-4\" />\n              ) : (\n                <Copy className=\"h-4 w-4\" />\n              )}\n            </Button>\n          </div>\n        )}\n        {output ? (\n          <div className=\"whitespace-pre-wrap text-[#333333]\">\n            {output}\n            {isStreaming && <span className=\"inline-block w-2 h-5 bg-blue-400 ml-1 animate-pulse rounded-full\" />}\n          </div>\n        ) : (\n          <div className=\"text-[#333333]/60 text-center mt-20\">\n            {isStreaming ? 'Generating...' : 'Create a draft. Update it. Repeat.'}\n          </div>\n        )}\n      </Card>\n\n      <div className=\"flex gap-2\">\n        {/* Input with Liquid Glass Effect */}\n        <div className=\"flex-1 relative rounded-2xl overflow-hidden shadow-[0_4px_4px_rgba(0,0,0,0.15),0_0_15px_rgba(0,0,0,0.08)] transition-all duration-400 ease-out\">\n          <div className=\"absolute inset-0 z-0 backdrop-blur-[3px] overflow-hidden rounded-2xl\" style={{ filter: 'url(#glass-distortion)' }} />\n          <div className=\"absolute inset-0 z-[1] bg-white/10 overflow-hidden rounded-2xl\" />\n          <div className=\"absolute inset-0 z-[2] overflow-hidden rounded-2xl shadow-[inset_1px_1px_1px_0_rgba(255,255,255,0.4),inset_-1px_-1px_1px_1px_rgba(255,255,255,0.4)]\" />\n          <Input\n            ref={inputRef}\n            value={userMessage}\n            onChange={(e) => onUserMessageChange(e.target.value)}\n            onKeyDown={(e) => e.key === 'Enter' && onSubmit()}\n            placeholder=\"Type your message here...\"\n            disabled={isStreaming}\n            className=\"relative z-[3] w-full bg-transparent border-0 text-[#333333] placeholder-black/50 focus:outline-none focus:ring-2 focus:ring-white/50 px-4 py-3\"\n          />\n        </div>\n        \n        {/* Send Button with Liquid Glass Effect */}\n        <div className=\"relative rounded-2xl overflow-hidden shadow-[0_4px_4px_rgba(0,0,0,0.15),0_0_15px_rgba(0,0,0,0.08)] transition-all duration-400 ease-out hover:shadow-[0_5px_5px_rgba(0,0,0,0.2),0_0_18px_rgba(0,0,0,0.1)]\">\n          <div className=\"absolute inset-0 z-0 backdrop-blur-[3px] overflow-hidden rounded-2xl\" style={{ filter: 'url(#glass-distortion)' }} />\n          <div className=\"absolute inset-0 z-[1] bg-white/10 hover:bg-white/15 transition-colors overflow-hidden rounded-2xl\" />\n          <div className=\"absolute inset-0 z-[2] overflow-hidden rounded-2xl shadow-[inset_1px_1px_1px_0_rgba(255,255,255,0.4),inset_-1px_-1px_1px_1px_rgba(255,255,255,0.4)]\" />\n          <Button \n            onClick={onSubmit}\n            disabled={!userMessage.trim() || isStreaming}\n            className=\"relative z-[3] bg-transparent hover:bg-transparent border-0 text-[#333333] p-3 disabled:opacity-50 cursor-pointer\"\n            size=\"icon\"\n          >\n            <Send className=\"h-4 w-4\" />\n          </Button>\n        </div>\n      </div>\n\n      {error && (\n        <div className=\"text-red-400 text-sm\">\n          Error: {error}\n        </div>\n      )}\n    </div>\n  );\n} "],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;;;;;;;AAYO,SAAS,gBAAgB,EAC9B,MAAM,EACN,WAAW,EACX,KAAK,EACL,WAAW,EACX,mBAAmB,EACnB,QAAQ,EACR,YAAY,EAAE,EACO;IACrB,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,4WAAA,CAAA,WAAQ,AAAD,EAAE;IACrC,MAAM,WAAW,CAAA,GAAA,4WAAA,CAAA,SAAM,AAAD,EAAoB;IAC1C,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,4WAAA,CAAA,WAAQ,AAAD,EAAE;IAEjD,iDAAiD;IACjD,CAAA,GAAA,4WAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,gBAAgB,CAAC,aAAa;YAChC,2CAA2C;YAC3C,SAAS,OAAO,EAAE;QACpB;QACA,gBAAgB;IAClB,GAAG;QAAC;QAAa;KAAa;IAE9B,+BAA+B;IAC/B,CAAA,GAAA,4WAAA,CAAA,YAAS,AAAD,EAAE;QACR,SAAS,OAAO,EAAE;IACpB,GAAG,EAAE;IAEL,MAAM,aAAa;QACjB,IAAI,QAAQ;YACV,MAAM,UAAU,SAAS,CAAC,SAAS,CAAC;YACpC,UAAU;YACV,WAAW,IAAM,UAAU,QAAQ;QACrC;IACF;IAEA,qBACE,qZAAC;QAAI,WAAW,CAAC,UAAU,EAAE,WAAW;;0BACtC,qZAAC,qJAAA,CAAA,OAAI;gBAAC,WAAU;;oBACb,wBACC,qZAAC;wBAAI,WAAU;kCACb,cAAA,qZAAC,uJAAA,CAAA,SAAM;4BACL,SAAS;4BACT,WAAU;4BACV,MAAK;sCAEJ,uBACC,qZAAC,wRAAA,CAAA,QAAK;gCAAC,WAAU;;;;;qDAEjB,qZAAC,sRAAA,CAAA,OAAI;gCAAC,WAAU;;;;;;;;;;;;;;;;oBAKvB,uBACC,qZAAC;wBAAI,WAAU;;4BACZ;4BACA,6BAAe,qZAAC;gCAAK,WAAU;;;;;;;;;;;6CAGlC,qZAAC;wBAAI,WAAU;kCACZ,cAAc,kBAAkB;;;;;;;;;;;;0BAKvC,qZAAC;gBAAI,WAAU;;kCAEb,qZAAC;wBAAI,WAAU;;0CACb,qZAAC;gCAAI,WAAU;gCAAuE,OAAO;oCAAE,QAAQ;gCAAyB;;;;;;0CAChI,qZAAC;gCAAI,WAAU;;;;;;0CACf,qZAAC;gCAAI,WAAU;;;;;;0CACf,qZAAC,sJAAA,CAAA,QAAK;gCACJ,KAAK;gCACL,OAAO;gCACP,UAAU,CAAC,IAAM,oBAAoB,EAAE,MAAM,CAAC,KAAK;gCACnD,WAAW,CAAC,IAAM,EAAE,GAAG,KAAK,WAAW;gCACvC,aAAY;gCACZ,UAAU;gCACV,WAAU;;;;;;;;;;;;kCAKd,qZAAC;wBAAI,WAAU;;0CACb,qZAAC;gCAAI,WAAU;gCAAuE,OAAO;oCAAE,QAAQ;gCAAyB;;;;;;0CAChI,qZAAC;gCAAI,WAAU;;;;;;0CACf,qZAAC;gCAAI,WAAU;;;;;;0CACf,qZAAC,uJAAA,CAAA,SAAM;gCACL,SAAS;gCACT,UAAU,CAAC,YAAY,IAAI,MAAM;gCACjC,WAAU;gCACV,MAAK;0CAEL,cAAA,qZAAC,sRAAA,CAAA,OAAI;oCAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;;YAKrB,uBACC,qZAAC;gBAAI,WAAU;;oBAAuB;oBAC5B;;;;;;;;;;;;;AAKlB","debugId":null}},
    {"offset": {"line": 1053, "column": 0}, "map": {"version":3,"sources":["file:///Users/dereklegenzoff/Source/gensx-mono/gensx/examples/draft-pad/components/ui/value-card.tsx"],"sourcesContent":["import { Card } from \"@/components/ui/card\";\n\ninterface ValueCardProps {\n  title: string;\n  value: any;\n  className?: string;\n}\n\nexport function ValueCard({ title, value, className = \"\" }: ValueCardProps) {\n  return (\n    <Card className={`p-4 ${className}`}>\n      <h2 className=\"text-lg font-semibold mb-4 text-[#333333]\">{title}</h2>\n      <div className=\"text-xs text-[#333333] bg-white/5 backdrop-blur-sm p-2 rounded-xl overflow-auto max-h-[300px] border border-white/10\">\n        <pre className=\"whitespace-pre-wrap\">{JSON.stringify(value, null, 2)}</pre>\n      </div>\n    </Card>\n  );\n} "],"names":[],"mappings":";;;;AAAA;;;AAQO,SAAS,UAAU,EAAE,KAAK,EAAE,KAAK,EAAE,YAAY,EAAE,EAAkB;IACxE,qBACE,qZAAC,qJAAA,CAAA,OAAI;QAAC,WAAW,CAAC,IAAI,EAAE,WAAW;;0BACjC,qZAAC;gBAAG,WAAU;0BAA6C;;;;;;0BAC3D,qZAAC;gBAAI,WAAU;0BACb,cAAA,qZAAC;oBAAI,WAAU;8BAAuB,KAAK,SAAS,CAAC,OAAO,MAAM;;;;;;;;;;;;;;;;;AAI1E","debugId":null}},
    {"offset": {"line": 1100, "column": 0}, "map": {"version":3,"sources":["file:///Users/dereklegenzoff/Source/gensx-mono/gensx/examples/draft-pad/components/ui/events-card.tsx"],"sourcesContent":["import { Card } from \"@/components/ui/card\";\n\ninterface EventsCardProps<T> {\n  title: string;\n  events: T[];\n  emptyMessage?: string;\n  className?: string;\n  maxHeight?: string;\n}\n\nexport function EventsCard<T>({ \n  title, \n  events, \n  emptyMessage = \"No events yet\",\n  className = \"\",\n  maxHeight = \"300px\"\n}: EventsCardProps<T>) {\n  return (\n    <Card className={`p-4 ${className}`}>\n      <h2 className=\"text-lg font-semibold mb-4 text-[#333333]\">{title}</h2>\n      <div className=\"text-xs text-[#333333] bg-white/5 backdrop-blur-sm p-2 rounded-xl overflow-auto border border-white/10\" style={{ maxHeight }}>\n        {events.length === 0 ? (\n          <p className=\"text-[#333333]/60\">{emptyMessage}</p>\n        ) : (\n          <div className=\"space-y-2\">\n            {events.slice().reverse().map((event: T, i: number) => (\n              <div key={i} className=\"border-b border-white/10 pb-2 last:border-b-0\">\n                <pre className=\"whitespace-pre-wrap\">{JSON.stringify(event, null, 2)}</pre>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </Card>\n  );\n} "],"names":[],"mappings":";;;;AAAA;;;AAUO,SAAS,WAAc,EAC5B,KAAK,EACL,MAAM,EACN,eAAe,eAAe,EAC9B,YAAY,EAAE,EACd,YAAY,OAAO,EACA;IACnB,qBACE,qZAAC,qJAAA,CAAA,OAAI;QAAC,WAAW,CAAC,IAAI,EAAE,WAAW;;0BACjC,qZAAC;gBAAG,WAAU;0BAA6C;;;;;;0BAC3D,qZAAC;gBAAI,WAAU;gBAAyG,OAAO;oBAAE;gBAAU;0BACxI,OAAO,MAAM,KAAK,kBACjB,qZAAC;oBAAE,WAAU;8BAAqB;;;;;yCAElC,qZAAC;oBAAI,WAAU;8BACZ,OAAO,KAAK,GAAG,OAAO,GAAG,GAAG,CAAC,CAAC,OAAU,kBACvC,qZAAC;4BAAY,WAAU;sCACrB,cAAA,qZAAC;gCAAI,WAAU;0CAAuB,KAAK,SAAS,CAAC,OAAO,MAAM;;;;;;2BAD1D;;;;;;;;;;;;;;;;;;;;;AASxB","debugId":null}},
    {"offset": {"line": 1171, "column": 0}, "map": {"version":3,"sources":["file:///Users/dereklegenzoff/Source/gensx-mono/gensx/examples/draft-pad/components/ui/state-events-card.tsx"],"sourcesContent":["import { Card } from \"@/components/ui/card\";\n\ninterface StateEventsCardProps {\n  title: string;\n  stateEvents: any;\n  className?: string;\n}\n\nexport function StateEventsCard({ title, stateEvents, className = \"\" }: StateEventsCardProps) {\n  return (\n    <Card className={`p-4 ${className}`}>\n      <h2 className=\"text-lg font-semibold mb-4 text-[#333333]\">{title}</h2>\n      <div className=\"text-xs text-[#333333] bg-white/5 backdrop-blur-sm p-2 rounded-xl overflow-auto max-h-[300px] border border-white/10\">\n        <pre className=\"whitespace-pre-wrap\">{JSON.stringify(stateEvents, null, 2)}</pre>\n      </div>\n    </Card>\n  );\n} "],"names":[],"mappings":";;;;AAAA;;;AAQO,SAAS,gBAAgB,EAAE,KAAK,EAAE,WAAW,EAAE,YAAY,EAAE,EAAwB;IAC1F,qBACE,qZAAC,qJAAA,CAAA,OAAI;QAAC,WAAW,CAAC,IAAI,EAAE,WAAW;;0BACjC,qZAAC;gBAAG,WAAU;0BAA6C;;;;;;0BAC3D,qZAAC;gBAAI,WAAU;0BACb,cAAA,qZAAC;oBAAI,WAAU;8BAAuB,KAAK,SAAS,CAAC,aAAa,MAAM;;;;;;;;;;;;;;;;;AAIhF","debugId":null}},
    {"offset": {"line": 1218, "column": 0}, "map": {"version":3,"sources":["file:///Users/dereklegenzoff/Source/gensx-mono/gensx/examples/draft-pad/components/ui/event-column.tsx"],"sourcesContent":["import { ValueCard } from \"./value-card\";\nimport { EventsCard } from \"./events-card\";\nimport { StateEventsCard } from \"./state-events-card\";\n\ninterface EventColumnProps<TEvent, TValue> {\n  title: string;\n  value: TValue;\n  events: TEvent[];\n  stateEvents: any;\n  emptyMessage?: string;\n  className?: string;\n}\n\nexport function EventColumn<TEvent, TValue>({\n  title,\n  value,\n  events,\n  stateEvents,\n  emptyMessage,\n  className = \"\"\n}: EventColumnProps<TEvent, TValue>) {\n  return (\n    <div className={`lg:col-span-1 space-y-4 ${className}`}>\n      <ValueCard \n        title={`${title} Value`} \n        value={value} \n      />\n      <EventsCard<TEvent>\n        title={title}\n        events={events}\n        emptyMessage={emptyMessage}\n      />\n      <StateEventsCard \n        title={`State ${title}`} \n        stateEvents={stateEvents} \n      />\n    </div>\n  );\n} "],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;;AAWO,SAAS,YAA4B,EAC1C,KAAK,EACL,KAAK,EACL,MAAM,EACN,WAAW,EACX,YAAY,EACZ,YAAY,EAAE,EACmB;IACjC,qBACE,qZAAC;QAAI,WAAW,CAAC,wBAAwB,EAAE,WAAW;;0BACpD,qZAAC,8JAAA,CAAA,YAAS;gBACR,OAAO,GAAG,MAAM,MAAM,CAAC;gBACvB,OAAO;;;;;;0BAET,qZAAC,+JAAA,CAAA,aAAU;gBACT,OAAO;gBACP,QAAQ;gBACR,cAAc;;;;;;0BAEhB,qZAAC,wKAAA,CAAA,kBAAe;gBACd,OAAO,CAAC,MAAM,EAAE,OAAO;gBACvB,aAAa;;;;;;;;;;;;AAIrB","debugId":null}},
    {"offset": {"line": 1271, "column": 0}, "map": {"version":3,"sources":["file:///Users/dereklegenzoff/Source/gensx-mono/gensx/examples/draft-pad/app/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport { useWorkflow, GenSXWorkflowEvent } from '@gensx/react';\nimport { DraftEditorCard } from \"@/components/ui/draft-editor-card\";\nimport { EventColumn } from \"@/components/ui/event-column\";\nimport { GenSXOutputEvent, GenSXProgressEvent } from '@gensx/client';\nimport {\n  StartContentEvent,\n  EndContentEvent,\n  ProgressEventTypes,\n  CustomWorkflowEvent,\n  WorkflowEventCounts,\n  UpdateDraftInput,\n  UpdateDraftOutput,\n  WorkflowEventData,\n  ProgressStats\n} from './types';\n\nexport default function Home() {\n  const [userMessage, setUserMessage] = useState('');\n  const [previousDraft, setPreviousDraft] = useState('');\n  const {\n    isStreaming,\n    error,\n    output,\n    //events: stateEvents,\n    workflowEvents: stateWorkflowEvents,\n    progressEvents: stateProgressEvents,\n    outputEvents: stateOutputEvents,\n    run,\n    stream,\n    stop,\n    clear,\n    useOutputEvents,\n    useProgressEvents,\n    useWorkflowEvents,\n    // need to update the events to be baseprogressevent instead of genSXProgressEvent\n  } = useWorkflow<UpdateDraftInput, UpdateDraftOutput, GenSXProgressEvent>({\n    endpoint: '/api/gensx',\n    workflowName: 'updateDraft',\n    defaultConfig: {\n      org: 'gensx',\n      project: 'draft-pad',\n      environment: 'default',\n    },\n  });\n\n  const {events: workflowEvents, value: workflowEventData} = useWorkflowEvents<GenSXWorkflowEvent, WorkflowEventData>({\n    reducer: {\n      reduce: (acc: WorkflowEventData, event: GenSXWorkflowEvent): WorkflowEventData => {\n        const newEvent: CustomWorkflowEvent = (() => {\n          if (event.type === 'start') {\n            return {\n              id: event.id,\n              type: event.type,\n              content: event.workflowName + ' ' + event.workflowExecutionId,\n              timestamp: new Date(event.timestamp),\n            };\n          } else if (event.type === 'end') {\n            return {\n              id: event.id,\n              type: event.type,\n              content: \"\",\n              timestamp: new Date(event.timestamp),\n            };\n          } else if (event.type === 'component-start') {\n            return {\n              id: event.id,\n              type: event.type,\n              content: event.componentName + ' ' + event.componentId,\n              timestamp: new Date(event.timestamp),\n            };\n          } else if (event.type === 'component-end') {\n            return {\n              id: event.id,\n              type: event.type,\n              content: event.componentName + ' ' + event.componentId,\n              timestamp: new Date(event.timestamp),\n            };\n          } else if (event.type === 'error') {\n            return {\n              id: event.id,\n              type: event.type,\n              content: event.error || 'Unknown error',\n              timestamp: new Date(event.timestamp),\n            };\n          }\n          return {\n            id: (event as any).id,\n            type: 'error' as const,\n            content: 'Unknown event type',\n            timestamp: new Date((event as any).timestamp),\n          };\n        })();\n\n        const newCounts = { ...acc.counts };\n        newCounts[event.type] = (newCounts[event.type] || 0) + 1;\n        newCounts.total = newCounts.total + 1;\n\n        return {\n          counts: newCounts,\n          customEvents: [...acc.customEvents, newEvent]\n        };\n      },\n      initial: {\n        counts: {\n          start: 0,\n          end: 0,\n          'component-start': 0,\n          'component-end': 0,\n          error: 0,\n          total: 0\n        } as WorkflowEventCounts,\n        customEvents: [] as CustomWorkflowEvent[]\n      }\n    }\n  });\n\n  const {events: progressEvents, value: progressStats} = useProgressEvents<ProgressEventTypes, ProgressStats>(\n    ['startContent', 'endContent'],\n    {\n      reducer: {\n        reduce: (acc: ProgressStats, event: StartContentEvent | EndContentEvent) => ({\n          starts: acc.starts + (event.type === 'startContent' ? 1 : 0),\n          ends: acc.ends + (event.type === 'endContent' ? 1 : 0),\n          isActive: (acc.starts + (event.type === 'startContent' ? 1 : 0)) >\n                    (acc.ends + (event.type === 'endContent' ? 1 : 0))\n        }),\n        initial: { starts: 0, ends: 0, isActive: false }\n      }\n    }\n  );\n\n  // in the future, we could make this actually reduce it from a partial json object to actually fill the type put in the generic\n  // (i.e. if we have a partial json object, we can fill the type with the partial json object which is very useful for the output events)\n  const {events: contentEvents, value: contentEventsValue} = useOutputEvents<GenSXOutputEvent, string>({\n    reducer: {\n       reduce: (acc: string, event: GenSXOutputEvent) => acc + event.content,\n       initial: '' as string\n     }\n  });\n\n  const handleSubmit = async () => {\n    if (!userMessage.trim() || isStreaming) return;\n    if (output) {\n      setPreviousDraft(output);\n    }\n    clear();\n\n    const message = userMessage.trim();\n    setUserMessage(''); // Clear the input immediately after submission\n\n    await stream({\n      userMessage: message,\n      currentDraft: output || previousDraft || '',\n    });\n  };\n\n  return (\n    <div className=\"min-h-screen\">\n      <div className=\"min-h-screen p-4\">\n      <div className=\"space-y-6\">\n        <div className=\"grid grid-cols-1 lg:grid-cols-4 gap-6\">\n          <div className=\"lg:col-span-1 space-y-4\">\n            <h1 className=\"text-3xl font-bold text-[#333333] font-atma text-center\">Draft Pad</h1>\n            <DraftEditorCard\n              output={output}\n              isStreaming={isStreaming}\n              error={error}\n              userMessage={userMessage}\n              onUserMessageChange={setUserMessage}\n              onSubmit={handleSubmit}\n            />\n          </div>\n\n          <EventColumn<GenSXWorkflowEvent, WorkflowEventData>\n            title=\"Workflow Events\"\n            value={workflowEventData}\n            events={workflowEvents}\n            stateEvents={stateWorkflowEvents}\n          />\n\n          <EventColumn<ProgressEventTypes, ProgressStats>\n            title=\"Progress Events\"\n            value={progressStats}\n            events={progressEvents}\n            stateEvents={stateProgressEvents}\n            emptyMessage=\"No start/end events yet\"\n          />\n\n          <EventColumn<GenSXOutputEvent, string>\n            title=\"Output Events\"\n            value={contentEventsValue}\n            events={contentEvents}\n            stateEvents={stateOutputEvents}\n            emptyMessage=\"No output events yet\"\n          />\n        </div>\n      </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}